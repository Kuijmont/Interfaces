/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestiondeunalmacen;

import static gestiondeunalmacen.GestionAlmacen.bd;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Frans
 */
public class Formulario extends javax.swing.JFrame {
    static javax.swing.JFrame padre;
    String op;
    //private GestorBD bd;
    /**
     * Creates new form JFrameFormulario
     */
    public Formulario(javax.swing.JFrame padre) {
        Formulario.padre=padre;
        initComponents();
        setTitle("Gestión de Almacén - Clientes");
        estadoInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCod = new javax.swing.JTextField();
        jTextFieldNif = new javax.swing.JTextField();
        jTextFieldLetra = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldApel = new javax.swing.JTextField();
        jTextFieldDom = new javax.swing.JTextField();
        jTextFieldCP = new javax.swing.JTextField();
        jTextFieldLoc = new javax.swing.JTextField();
        jTextFieldTelf = new javax.swing.JTextField();
        jTextFieldMov = new javax.swing.JTextField();
        jTextFieldFax = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuMan = new javax.swing.JMenu();
        jMenuItemAltas = new javax.swing.JMenuItem();
        jMenuItemBajas = new javax.swing.JMenuItem();
        jMenuItemMod = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemVolver = new javax.swing.JMenuItem();
        jMenuCon = new javax.swing.JMenu();
        jMenuItemCod = new javax.swing.JMenuItem();
        jMenuList = new javax.swing.JMenu();
        jMenuItemCodigo = new javax.swing.JMenuItem();
        jMenuItemEntre = new javax.swing.JMenuItem();
        jMenuItemGraf = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Código");

        jLabel2.setText("NIF");

        jLabel3.setText("Nombre");

        jTextFieldCod.setColumns(6);
        jTextFieldCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCodKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodKeyPressed(evt);
            }
        });

        jTextFieldNif.setColumns(7);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTextFieldNombre, org.jdesktop.beansbinding.ObjectProperty.create(), jTextFieldNif, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jTextFieldNif.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNifKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNifKeyPressed(evt);
            }
        });

        jTextFieldLetra.setEditable(false);
        jTextFieldLetra.setColumns(1);
        jTextFieldLetra.setEnabled(false);

        jTextFieldNombre.setColumns(15);
        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyPressed(evt);
            }
        });

        jLabel4.setText("Apellidos");

        jLabel5.setText("Domicilio");

        jLabel6.setText("C.P.");

        jLabel7.setText("Localidad");

        jLabel8.setText("Teléfono");

        jLabel9.setText("Móvil");

        jLabel10.setText("Fax");

        jTextFieldApel.setColumns(35);
        jTextFieldApel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldApelKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldApelKeyPressed(evt);
            }
        });

        jTextFieldDom.setColumns(40);
        jTextFieldDom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDomKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDomKeyPressed(evt);
            }
        });

        jTextFieldCP.setColumns(4);
        jTextFieldCP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCPKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCPKeyPressed(evt);
            }
        });

        jTextFieldLoc.setColumns(20);
        jTextFieldLoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLocKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldLocKeyPressed(evt);
            }
        });

        jTextFieldTelf.setColumns(7);
        jTextFieldTelf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTelfKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTelfKeyPressed(evt);
            }
        });

        jTextFieldMov.setColumns(7);
        jTextFieldMov.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMovKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMovKeyPressed(evt);
            }
        });

        jTextFieldFax.setColumns(7);
        jTextFieldFax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFaxKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldFaxKeyPressed(evt);
            }
        });

        jLabel11.setText("E-mail");

        jLabel12.setText("Total Ventas");

        jTextFieldEmail.setColumns(20);
        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyPressed(evt);
            }
        });

        jTextFieldTotal.setColumns(1);
        jTextFieldTotal.setText("0");
        jTextFieldTotal.setEnabled(false);

        jButtonAceptar.setMnemonic('a');
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancel.setMnemonic('c');
        jButtonCancel.setText("Cancelar");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonExit.setMnemonic('s');
        jButtonExit.setText("Salir");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jMenuMan.setMnemonic('m');
        jMenuMan.setText("Mantenimiento");

        jMenuItemAltas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAltas.setMnemonic('a');
        jMenuItemAltas.setText("Altas");
        jMenuItemAltas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAltasActionPerformed(evt);
            }
        });
        jMenuMan.add(jMenuItemAltas);

        jMenuItemBajas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemBajas.setMnemonic('b');
        jMenuItemBajas.setText("Bajas");
        jMenuItemBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBajasActionPerformed(evt);
            }
        });
        jMenuMan.add(jMenuItemBajas);

        jMenuItemMod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemMod.setMnemonic('m');
        jMenuItemMod.setText("Modificaciones");
        jMenuItemMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModActionPerformed(evt);
            }
        });
        jMenuMan.add(jMenuItemMod);
        jMenuMan.add(jSeparator1);

        jMenuItemVolver.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemVolver.setMnemonic('v');
        jMenuItemVolver.setText("Volver");
        jMenuItemVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVolverActionPerformed(evt);
            }
        });
        jMenuMan.add(jMenuItemVolver);

        jMenuBar1.add(jMenuMan);

        jMenuCon.setMnemonic('o');
        jMenuCon.setText("Consultas");

        jMenuItemCod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCod.setMnemonic('p');
        jMenuItemCod.setText("Por Código");
        jMenuItemCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCodActionPerformed(evt);
            }
        });
        jMenuCon.add(jMenuItemCod);

        jMenuList.setMnemonic('l');
        jMenuList.setText("Listados");

        jMenuItemCodigo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCodigo.setMnemonic('p');
        jMenuItemCodigo.setText("Por Código");
        jMenuItemCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCodigoActionPerformed(evt);
            }
        });
        jMenuList.add(jMenuItemCodigo);

        jMenuItemEntre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEntre.setMnemonic('e');
        jMenuItemEntre.setText("Entre Códigos");
        jMenuItemEntre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEntreActionPerformed(evt);
            }
        });
        jMenuList.add(jMenuItemEntre);

        jMenuItemGraf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemGraf.setMnemonic('g');
        jMenuItemGraf.setText("Gráficos");
        jMenuItemGraf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGrafActionPerformed(evt);
            }
        });
        jMenuList.add(jMenuItemGraf);

        jMenuCon.add(jMenuList);

        jMenuBar1.add(jMenuCon);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldTelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jTextFieldLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jTextFieldMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextFieldNif, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2))
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTotal)))
                            .addComponent(jTextFieldApel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldApel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonExit))
                .addGap(20, 20, 20))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
        boolean verdadero=true;
    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        if(op.equals("altas")){
            try {
                comprobarTextFields_Altas();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR");
            }
        }
        else
        {
            if(op.equals("mod")){
                try {
                    comprobarTextFields_Mod();
                } catch (Exception ex) {
                     JOptionPane.showMessageDialog(null, "ERROR");
                }
            }
            else
            {
                if(op.equals("bajas")){
                int num = JOptionPane.showConfirmDialog(rootPane,"¿Seguro que quieres borrar ese cliente?", "ERROR.", JOptionPane.OK_CANCEL_OPTION);
                switch(num)
                {
                    case JOptionPane.OK_OPTION:
                        try {
                            bd.darBaja(jTextFieldCod.getText());
                            estadoABMC();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "ERROR AL BORRAR.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                    case JOptionPane.CANCEL_OPTION://Si das a "cancelar" en la ventana anterior muestra este mensaje.
                        estadoABMC();
                    case JOptionPane.CLOSED_OPTION://Si cierras la ventana anterior muestra este mensaje.
                        estadoABMC();
                        break;
                }
                }
                else{
                    //comprobarTextFields();
                }
            }
        }
  
        
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // Reset
        jTextFieldCod.setText(null);
        jTextFieldNif.setText(null);
        jTextFieldLetra.setText(null);
        jTextFieldNombre.setText(null);
        jTextFieldApel.setText(null);
        jTextFieldDom.setText(null);
        jTextFieldCP.setText(null);
        jTextFieldLoc.setText(null);
        jTextFieldTelf.setText(null);
        jTextFieldMov.setText(null);
        jTextFieldFax.setText(null);
        jTextFieldEmail.setText(null);
        estadoABMC();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jTextFieldCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodKeyPressed
        if(evt.getKeyCode()==10){
            try {
                if(jTextFieldCod.getText().matches("[a-zA-Z0-9]{1,6}")){
                    rellenarCodigo();
                try {
                    switch (op) {
                        case "altas":
                            if(bd.valCod(jTextFieldCod.getText())){
                                setTitle("Gestión de Almacén - Clientes - Altas");
                                estadoA();
                            } else{
                                JOptionPane.showMessageDialog(null, "El código introducido ya existe.", "Código incorrecto", 0);
                                estadoABMC();
                            }   break;
                        case "bajas":
                            if(!bd.valCod(jTextFieldCod.getText())){
                                setTitle("Gestión de Almacén - Clientes - Bajas");
                                Cliente c=bd.consulta(jTextFieldCod.getText());
                                jTextFieldNif.setText(c.getNif());
                                jTextFieldLetra.setText(c.getLetra());
                                jTextFieldNombre.setText(c.getNombre());
                                jTextFieldApel.setText(c.getApell());
                                jTextFieldDom.setText(c.getDom());
                                jTextFieldCP.setText(c.getCp());
                                jTextFieldLoc.setText(c.getLocal());
                                jTextFieldTelf.setText(c.getTelf());
                                jTextFieldMov.setText(c.getMovil());
                                jTextFieldFax.setText(c.getFax());
                                jTextFieldEmail.setText(c.getEmail());
                                jTextFieldTotal.setText(c.getTotal());
                                estadoB();
                            }else{
                                JOptionPane.showMessageDialog(null, "El código introducido no existe.", "Código incorrecto", 0);
                                estadoABMC();
                            }   break;
                        case "mod":
                            if(!bd.valCod(jTextFieldCod.getText())){
                                setTitle("Gestión de Almacén - Clientes - Modificación");
                                Cliente c=bd.consulta(jTextFieldCod.getText());
                                jTextFieldNif.setText(c.getNif());
                                jTextFieldLetra.setText(c.getLetra());
                                jTextFieldNombre.setText(c.getNombre());
                                jTextFieldApel.setText(c.getApell());
                                jTextFieldDom.setText(c.getDom());
                                jTextFieldCP.setText(c.getCp());
                                jTextFieldLoc.setText(c.getLocal());
                                jTextFieldTelf.setText(c.getTelf());
                                jTextFieldMov.setText(c.getMovil());
                                jTextFieldFax.setText(c.getFax());
                                jTextFieldEmail.setText(c.getEmail());
                                jTextFieldTotal.setText(c.getTotal());
                                estadoA();
                            }else{
                                JOptionPane.showMessageDialog(null, "El código introducido no existe.", "Código incorrecto", 0);
                                estadoABMC();
                            }   break;
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error en la base de datos.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    estadoABMC();
                }
                }else{
                    JOptionPane.showMessageDialog(null, "Código no puede estar vacío.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTextFieldCodKeyPressed

    private void jTextFieldCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodKeyTyped
        // TODO add your handling code here:
        int limite=6;
        if(jTextFieldCod.getText().length()==limite){
            evt.consume();
        }
  
    }//GEN-LAST:event_jTextFieldCodKeyTyped

    private void jTextFieldNifKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNifKeyTyped
        // TODO add your handling code here:
        int limite=8;
        if(jTextFieldNif.getText().length()==limite){
            evt.consume();
           // sacarletra();
            jTextFieldNombre.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldNifKeyTyped

    private void jTextFieldApelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApelKeyTyped
        // TODO add your handling code here:
        int limite=35;
        if(jTextFieldApel.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldApelKeyTyped

    private void jTextFieldNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyTyped
        // TODO add your handling code here:
        int limite=15;
        if(jTextFieldNombre.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNombreKeyTyped

    private void jTextFieldDomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDomKeyTyped
        // TODO add your handling code here:
        int limite=40;
        if(jTextFieldDom.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldDomKeyTyped

    private void jTextFieldCPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCPKeyTyped
        // TODO add your handling code here:
        int limite=5;
        if(jTextFieldCP.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCPKeyTyped

    private void jTextFieldLocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocKeyTyped
        // TODO add your handling code here:
        int limite=20;
        if(jTextFieldLoc.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLocKeyTyped

    private void jTextFieldTelfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelfKeyTyped
        // TODO add your handling code here:
        int limite=9;
        if(jTextFieldTelf.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldTelfKeyTyped

    private void jTextFieldMovKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMovKeyTyped
        // TODO add your handling code here:
        int limite=9;
        if(jTextFieldMov.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldMovKeyTyped

    private void jTextFieldFaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFaxKeyTyped
        // TODO add your handling code here:
        int limite=9;
        if(jTextFieldFax.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldFaxKeyTyped

    private void jTextFieldEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyTyped
        // TODO add your handling code here:
        int limite=20;
        if(jTextFieldEmail.getText().length()==limite){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldEmailKeyTyped

    private void jTextFieldNifKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNifKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            
            jTextFieldNombre.grabFocus();
        }//sacarletra();
    }//GEN-LAST:event_jTextFieldNifKeyPressed

    private void jTextFieldNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldApel.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldNombreKeyPressed

    private void jTextFieldApelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApelKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldDom.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldApelKeyPressed

    private void jTextFieldDomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDomKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldCP.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldDomKeyPressed

    private void jTextFieldCPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCPKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldLoc.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldCPKeyPressed

    private void jTextFieldLocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldTelf.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldLocKeyPressed

    private void jTextFieldTelfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelfKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldMov.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldTelfKeyPressed

    private void jTextFieldMovKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMovKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldFax.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldMovKeyPressed

    private void jTextFieldFaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFaxKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jTextFieldEmail.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldFaxKeyPressed

    private void jTextFieldEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            jButtonAceptar.grabFocus();
        }
    }//GEN-LAST:event_jTextFieldEmailKeyPressed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
       estadoInicial();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jMenuItemVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVolverActionPerformed
        this.setVisible(false);
        padre.setEnabled(true); 
        bd.close();
    }//GEN-LAST:event_jMenuItemVolverActionPerformed

    private void jMenuItemAltasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAltasActionPerformed
        estadoABMC();
        op="altas";
        setTitle("Gestión de Almacén - Clientes - Altas");
    }//GEN-LAST:event_jMenuItemAltasActionPerformed

    private void jMenuItemBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBajasActionPerformed
        estadoABMC();
        op="bajas";
        setTitle("Gestión de Almacén - Clientes - Bajas");
    }//GEN-LAST:event_jMenuItemBajasActionPerformed

    private void jMenuItemModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModActionPerformed
        estadoABMC();   
        op="mod";
        setTitle("Gestión de Almacén - Clientes - Modificación");
    }//GEN-LAST:event_jMenuItemModActionPerformed

    private void jMenuItemCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCodigoActionPerformed
            bd.ejecutarInforme();
    }//GEN-LAST:event_jMenuItemCodigoActionPerformed

    private void jMenuItemEntreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEntreActionPerformed
        VentanaEntreCod e = new VentanaEntreCod();
        e.show();
    }//GEN-LAST:event_jMenuItemEntreActionPerformed

    private void jMenuItemGrafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGrafActionPerformed
        bd.ejecutarGráfica();
    }//GEN-LAST:event_jMenuItemGrafActionPerformed

    private void jMenuItemCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCodActionPerformed
        JOptionPane.showMessageDialog(null, "En proceso, disculpe por las molestias.", "Por Código", 1);
    }//GEN-LAST:event_jMenuItemCodActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario(padre).setVisible(true);
            }
        });
    }
    protected void processWindowEvent(java.awt.event.WindowEvent e) {
        super.processWindowEvent(e);
        if (e.getID() == java.awt.event.WindowEvent.WINDOW_CLOSING) {
            padre.setEnabled(true);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCon;
    private javax.swing.JMenuItem jMenuItemAltas;
    private javax.swing.JMenuItem jMenuItemBajas;
    private javax.swing.JMenuItem jMenuItemCod;
    private javax.swing.JMenuItem jMenuItemCodigo;
    private javax.swing.JMenuItem jMenuItemEntre;
    private javax.swing.JMenuItem jMenuItemGraf;
    private javax.swing.JMenuItem jMenuItemMod;
    private javax.swing.JMenuItem jMenuItemVolver;
    private javax.swing.JMenu jMenuList;
    private javax.swing.JMenu jMenuMan;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextFieldApel;
    private javax.swing.JTextField jTextFieldCP;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldDom;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFax;
    private javax.swing.JTextField jTextFieldLetra;
    private javax.swing.JTextField jTextFieldLoc;
    private javax.swing.JTextField jTextFieldMov;
    private javax.swing.JTextField jTextFieldNif;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelf;
    private javax.swing.JTextField jTextFieldTotal;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void validacionCodigo() {
        String Codigo=jTextFieldCod.getText();
        if(Codigo.matches("([A-Z]*[a-z]*[0-9]*){6}") || Codigo==""){
            verdadero=true;
            if(Codigo.length()<6){
                int longitud=6-Codigo.length();
                    String ceros="";
                    if(longitud==1){
                        ceros=ceros+"0";
                    }
                    if(longitud==2){
                        ceros=ceros+"00";
                    }
                    if(longitud==3){
                        ceros=ceros+"000";
                    }
                    if(longitud==4){
                        ceros=ceros+"0000";
                    }
                    if(longitud==5){
                        ceros=ceros+"00000";
                    }
                    if(longitud==6){
                        JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Código", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                        jTextFieldCod.setText(null);
                        jTextFieldCod.grabFocus();
                        verdadero=false;
                    }
            Codigo=ceros.concat(Codigo);
            jTextFieldCod.setText(Codigo);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Código", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCod.setText(null);
            jTextFieldCod.grabFocus();
            verdadero=false;
        }
    }
    private void validacionNIF() {
        String NIF=jTextFieldNif.getText();
        if(NIF.matches("[0-9]{8}") || NIF==null){
            if(NIF==null){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en NIF", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldNif.setText(null);
                jTextFieldNif.grabFocus();
                verdadero=false;
            }
            verdadero=true;
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en NIF", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNif.setText(null);
            jTextFieldNif.grabFocus();
            verdadero=false;
        }
    }   
    private void sacarletra() {
        String NIF_STRING_ASOCIATION = "TRWAGMYFPDXBNJZSQVHLCKE";
        int letra=Integer.valueOf(jTextFieldNif.getText()) % 23;
        jTextFieldLetra.setText(""+NIF_STRING_ASOCIATION.charAt(letra));
        
    }
    private void validacionNombre() {
        String Nombre=jTextFieldNombre.getText();
        if(Nombre.matches("([A-Z]*[a-z]*[ñÑ .ÁÉÍÓÚáéíóúÀÈÌÒÙàèìòù]*){15}") || Nombre.equals("")){
            verdadero=true;
            if(Nombre.equals("")){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Nombre", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldNombre.setText(null);
                jTextFieldNombre.grabFocus();
                verdadero=false;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Nombre", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNombre.setText(null);
            jTextFieldNombre.grabFocus();
            verdadero=false;
        }
    }
    private void validacionApellidos() {
        String Apellidos=jTextFieldApel.getText();
        if(Apellidos.matches("([A-Z]*[a-z]*[ñÑ .ÁÉÍÓÚáéíóúÀÈÌÒÙàèìòù-]*){35}") || Apellidos.equals("")){
            verdadero=true;
            if(Apellidos.equals("")){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Apellidos", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldApel.setText(null);
                jTextFieldApel.grabFocus();
                verdadero=false;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Apellidos", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldApel.setText(null);
            jTextFieldApel.grabFocus();
            verdadero=false;
        }
    }
    private void validacionDomicilio() {
        String Domicilio=jTextFieldDom.getText();
        if(Domicilio.matches("([A-Z]*[a-z]*[0-9]*[ñÑ .ÁÉÍÓÚáéíóúÀÈÌÒÙàèìòù-]*[ºª/,]*){35}") || Domicilio.equals("")){
            verdadero=true;
            if(Domicilio.equals("")){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Domicilio", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldDom.setText(null);
                jTextFieldDom.grabFocus();
                verdadero=false;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Domicilio", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldDom.setText(null);
            jTextFieldDom.grabFocus();
            verdadero=false;
        }
    }
    private void validacionCP() {
        String CP=jTextFieldCP.getText();
        if(CP.matches("[0-9]{5}") || CP.equals("")){
            verdadero=true;
            if(CP.equals("")){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en C.P.", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldCP.setText(null);
                jTextFieldCP.grabFocus();
                verdadero=false;
            }  
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en C.P.", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCP.setText(null);
            jTextFieldCP.grabFocus();
            verdadero=false;
        }
    }
    private void validacionLocalidad() {
        String Localidad=jTextFieldLoc.getText();
        if(Localidad.matches("([A-Z]*[a-z]*[ñÑ .ÁÉÍÓÚáéíóúÀÈÌÒÙàèìòù-]*){20}") || Localidad.equals("")){
            verdadero=true;
            if(Localidad.equals("")){
                JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Localidad", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldLoc.setText(null);
                jTextFieldLoc.grabFocus();
                verdadero=false;
            }  
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos vacios o erroneos en Localidad", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldLoc.setText(null);
            jTextFieldLoc.grabFocus();
            verdadero=false;
        }
    }
    private void validacionTelefono() {
        String Tlf=jTextFieldTelf.getText();
        if(Tlf.matches("[0-9]{9}") || Tlf.equals("")){
            verdadero=true;
             
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos erroneos en Teléfono", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldTelf.setText(null);
            jTextFieldTelf.grabFocus();
            verdadero=false;
        }
    }
    private void validacionMovil() {
        String Movil=jTextFieldMov.getText();
        if(Movil.matches("[0-9]{9}") || Movil.equals("")){
            verdadero=true;
            
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos erroneos en Móvil", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldMov.setText(null);
            jTextFieldMov.grabFocus();
            verdadero=false;
        }
    }
    private void validacionFax() {
        String Fax=jTextFieldFax.getText();
        if(Fax.matches("[0-9]{9}") || Fax.equals("")){
            verdadero=true;
            
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos erroneos en Fax", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldFax.setText(null);
            jTextFieldFax.grabFocus();
            verdadero=false;
        }
    }
    private void validacionCorreo() {
        String Email=jTextFieldEmail.getText();
        if(Email.matches("([A-Z]*[a-z]*[0-9]*[ñÑ .ÁÉÍÓÚáéíóúÀÈÌÒÙàèìòù-]*[_@]*){20}") || Email.equals("")){
            verdadero=true;
            
        }else{
            JOptionPane.showMessageDialog(this, "Aviso, datos erroneos en E-mail", "Datos incorrectos", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldEmail.setText(null);
            jTextFieldEmail.grabFocus();
            verdadero=false;
        }
    }
    private void estadoInicial() {
        setTitle("Gestión de Almacén - Clientes");
        jTextFieldCod.setText("");
        jTextFieldCod.setEnabled(false);
        jTextFieldNif.setEnabled(false);
        jTextFieldLetra.setEnabled(false);
        jTextFieldNombre.setEnabled(false);
        jTextFieldApel.setEnabled(false);
        jTextFieldDom.setEnabled(false);
        jTextFieldCP.setEnabled(false);
        jTextFieldLoc.setEnabled(false);
        jTextFieldTelf.setEnabled(false);
        jTextFieldMov.setEnabled(false);
        jTextFieldFax.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(false);
        jButtonCancel.setEnabled(false);
        jButtonExit.setEnabled(false);
        jMenuBar1.setEnabled(true);
        jMenuCon.setEnabled(true);
        jMenuItemAltas.setEnabled(true);
        jMenuItemBajas.setEnabled(true);
        jMenuItemCod.setEnabled(true);
        jMenuItemCodigo.setEnabled(true);
        jMenuItemEntre.setEnabled(true);
        jMenuItemGraf.setEnabled(true);
        jMenuItemMod.setEnabled(true);
        jMenuItemVolver.setEnabled(true);
        jMenuList.setEnabled(true);
        jMenuMan.setEnabled(true);
        jMenuBar1.grabFocus();
    }
    private void estadoABMC() {
        jTextFieldCod.setEnabled(true);
        jTextFieldNif.setEnabled(false);
        jTextFieldLetra.setEnabled(false);
        jTextFieldNombre.setEnabled(false);
        jTextFieldApel.setEnabled(false);
        jTextFieldDom.setEnabled(false);
        jTextFieldCP.setEnabled(false);
        jTextFieldLoc.setEnabled(false);
        jTextFieldTelf.setEnabled(false);
        jTextFieldMov.setEnabled(false);
        jTextFieldFax.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(false);
        jButtonCancel.setEnabled(false);
        jButtonExit.setEnabled(true);
        jMenuBar1.setEnabled(true);
        jMenuCon.setEnabled(true);
        jMenuItemAltas.setEnabled(true);
        jMenuItemBajas.setEnabled(true);
        jMenuItemCod.setEnabled(true);
        jMenuItemCodigo.setEnabled(true);
        jMenuItemEntre.setEnabled(true);
        jMenuItemGraf.setEnabled(true);
        jMenuItemMod.setEnabled(true);
        jMenuItemVolver.setEnabled(true);
        jMenuList.setEnabled(true);
        jMenuMan.setEnabled(true);
        jTextFieldCod.grabFocus();
        jTextFieldCod.setText("");
        jTextFieldCod.setText(null);
        jTextFieldNif.setText(null);
        jTextFieldLetra.setText(null);
        jTextFieldNombre.setText(null);
        jTextFieldApel.setText(null);
        jTextFieldDom.setText(null);
        jTextFieldCP.setText(null);
        jTextFieldLoc.setText(null);
        jTextFieldTelf.setText(null);
        jTextFieldMov.setText(null);
        jTextFieldFax.setText(null);
        jTextFieldEmail.setText(null);
    }
    private void estadoA() {
        jTextFieldCod.setEnabled(false);
        jTextFieldNif.setEnabled(true);
        jTextFieldLetra.setEnabled(true);
        jTextFieldNombre.setEnabled(true);
        jTextFieldApel.setEnabled(true);
        jTextFieldDom.setEnabled(true);
        jTextFieldCP.setEnabled(true);
        jTextFieldLoc.setEnabled(true);
        jTextFieldTelf.setEnabled(true);
        jTextFieldMov.setEnabled(true);
        jTextFieldFax.setEnabled(true);
        jTextFieldEmail.setEnabled(true);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(true);
        jButtonCancel.setEnabled(true);
        jButtonExit.setEnabled(true);
        jMenuBar1.setEnabled(true);
        jMenuCon.setEnabled(true);
        jMenuItemAltas.setEnabled(true);
        jMenuItemBajas.setEnabled(true);
        jMenuItemCod.setEnabled(true);
        jMenuItemCodigo.setEnabled(true);
        jMenuItemEntre.setEnabled(true);
        jMenuItemGraf.setEnabled(true);
        jMenuItemMod.setEnabled(true);
        jMenuItemVolver.setEnabled(true);
        jMenuList.setEnabled(true);
        jMenuMan.setEnabled(true);
        jTextFieldNif.grabFocus();
    }
    private void estadoB() {
        jTextFieldCod.setEnabled(false);
        jTextFieldNif.setEnabled(false);
        jTextFieldLetra.setEnabled(false);
        jTextFieldNombre.setEnabled(false);
        jTextFieldApel.setEnabled(false);
        jTextFieldDom.setEnabled(false);
        jTextFieldCP.setEnabled(false);
        jTextFieldLoc.setEnabled(false);
        jTextFieldTelf.setEnabled(false);
        jTextFieldMov.setEnabled(false);
        jTextFieldFax.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(true);
        jButtonCancel.setEnabled(true);
        jButtonExit.setEnabled(true);
        jMenuBar1.setEnabled(true);
        jMenuCon.setEnabled(true);
        jMenuItemAltas.setEnabled(true);
        jMenuItemBajas.setEnabled(true);
        jMenuItemCod.setEnabled(true);
        jMenuItemCodigo.setEnabled(true);
        jMenuItemEntre.setEnabled(true);
        jMenuItemGraf.setEnabled(true);
        jMenuItemMod.setEnabled(true);
        jMenuItemVolver.setEnabled(true);
        jMenuList.setEnabled(true);
        jMenuMan.setEnabled(true);
        jButtonAceptar.grabFocus();
    }
    private void comprobarTextFields_Altas() {
        if(jTextFieldCod.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            if(jTextFieldNif.getText().matches("[0-9]{8}"))
            {
                sacarletra();
                if(jTextFieldNombre.getText().matches("[a-zA-Z\\s]{1,15}"))
                {
                    if(jTextFieldApel.getText().matches("[a-zA-Z\\s.-]{1,35}"))
                    {
                        if(jTextFieldDom.getText().matches("[a-zA-Z0-9\\s\\W]{1,40}"))
                        {
                            if(jTextFieldCP.getText().matches("[0-9]{5}")) 
                            {
                                if(jTextFieldLoc.getText().matches("[a-zA-Z\\s.-]{1,20}"))
                                {
                                    if(jTextFieldTelf.getText().matches("[0-9]{9}") || jTextFieldTelf.getText().equals(""))
                                    {
                                        if(jTextFieldMov.getText().matches("[0-9]{9}") || jTextFieldMov.getText().equals(""))
                                        {
                                            if(jTextFieldFax.getText().matches("[0-9]{9}") || jTextFieldFax.getText().equals(""))
                                            {
                                                if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]{1,20}") || jTextFieldEmail.getText().equals(""))
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El formulario ha sido rellenado correctamente.","Formulario correcto.", WIDTH);
                                                   try { 
                                                        bd.darAlta(jTextFieldCod.getText(),jTextFieldNif.getText()+jTextFieldLetra.getText(),jTextFieldApel.getText(),
                                                                jTextFieldNombre.getText(), jTextFieldDom.getText(),jTextFieldCP.getText(),jTextFieldLoc.getText(),
                                                                jTextFieldTelf.getText(),jTextFieldMov.getText(),jTextFieldFax.getText(),jTextFieldEmail.getText(),
                                                                jTextFieldTotal.getText());
                                                        estadoABMC();
                                                    } catch (SQLException ex) {
                                                        JOptionPane.showMessageDialog(null, "ERROR en el dado de alta.", "ERROR.", JOptionPane.ERROR_MESSAGE);                       
                                                    }
                                                    
                                                    
                                                }
                                                else
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El email no puede contener acentos ni 'ñ' ni '/' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                                    jTextFieldEmail.grabFocus();
                                                }
                                                
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "El fax debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                                jTextFieldFax.grabFocus();
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "El móvil debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                            jTextFieldMov.grabFocus();
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "El teléfono debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                        jTextFieldTelf.grabFocus();
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "La localidad no puede contener números ni '_' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                    jTextFieldLoc.grabFocus();
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "El Código postal debe contener 5 números","Error en el domicilio", WIDTH);
                                jTextFieldCP.grabFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "El domicilio no puede contener @ ni _ \n y no puede superar los 40 caracteres","Error en el domicilio", WIDTH);
                            jTextFieldDom.grabFocus(); 
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "El apellido no puede contener números\n y no puede superar los 35 caracteres","Error en el apellido", WIDTH);
                        jTextFieldApel.grabFocus(); 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "El nombre no puede contener números ni carácteres extraños \n y no puede superar los 15 caracteres","Error en el Nombre", WIDTH);
                    jTextFieldNombre.grabFocus(); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "El NIF tiene que llevar 8 dígitos","Error en el NIF", WIDTH);
                jTextFieldNif.grabFocus(); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "El código solo puede contener letras o números","Error en el código", WIDTH);
            jTextFieldCod.grabFocus(); 
        }
    }

    private void comprobarTextFields_Mod() {

        if(jTextFieldCod.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            if(jTextFieldNif.getText().matches("[0-9]{8}"))
            {
                sacarletra();
                if(jTextFieldNombre.getText().matches("[a-zA-Z\\s]{1,15}"))
                {
                    if(jTextFieldApel.getText().matches("[a-zA-Z\\s.-]{1,35}"))
                    {
                        if(jTextFieldDom.getText().matches("[a-zA-Z0-9\\s\\W]{1,40}"))
                        {
                            if(jTextFieldCP.getText().matches("[0-9]{5}")) 
                            {
                                if(jTextFieldLoc.getText().matches("[a-zA-Z\\s.-]{1,20}"))
                                {
                                    if(jTextFieldTelf.getText().matches("[0-9]{9}") || jTextFieldTelf.getText().equals(""))
                                    {
                                        if(jTextFieldMov.getText().matches("[0-9]{9}") || jTextFieldMov.getText().equals(""))
                                        {
                                            if(jTextFieldFax.getText().matches("[0-9]{9}") || jTextFieldFax.getText().equals(""))
                                            {
                                                if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]{1,20}") || jTextFieldEmail.getText().equals(""))
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El formulario ha sido rellenado correctamente.","Formulario correcto.", WIDTH);
                                                    try {
                                                        bd.modificar(jTextFieldCod.getText(),jTextFieldNif.getText()+jTextFieldLetra.getText(),jTextFieldNombre.getText(),
                                                                jTextFieldApel.getText(),jTextFieldDom.getText(),jTextFieldCP.getText(),jTextFieldLoc.getText(),
                                                                jTextFieldTelf.getText(),jTextFieldMov.getText(),jTextFieldFax.getText(),jTextFieldEmail.getText(),
                                                                jTextFieldTotal.getText());
                                                     } catch (SQLException ex) {
                                                        JOptionPane.showMessageDialog(null, "ERROR en la modificación.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                                                    }
                                                    estadoABMC();
                                                }
                                                else
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El email no puede contener acentos ni 'ñ' ni '/' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                                    jTextFieldEmail.grabFocus();
                                                }
                                                
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "El fax debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                                jTextFieldFax.grabFocus();
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "El móvil debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                            jTextFieldMov.grabFocus();
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "El teléfono debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                        jTextFieldTelf.grabFocus();
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "La localidad no puede contener números ni '_' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                    jTextFieldLoc.grabFocus();
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "El Código postal debe contener 5 números","Error en el domicilio", WIDTH);
                                jTextFieldCP.grabFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "El domicilio no puede contener @ ni _ \n y no puede superar los 40 caracteres","Error en el domicilio", WIDTH);
                            jTextFieldDom.grabFocus(); 
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "El apellido no puede contener números\n y no puede superar los 35 caracteres","Error en el apellido", WIDTH);
                        jTextFieldApel.grabFocus(); 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "El nombre no puede contener números ni carácteres extraños \n y no puede superar los 15 caracteres","Error en el Nombre", WIDTH);
                    jTextFieldNombre.grabFocus(); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "El NIF tiene que llevar 8 dígitos","Error en el NIF", WIDTH);
                jTextFieldNif.grabFocus(); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "El código solo puede contener letras o números","Error en el código", WIDTH);
            jTextFieldCod.grabFocus(); 
        }
        
    }
    private void rellenarCodigo() throws Exception
    {
        String cod=jTextFieldCod.getText();
        if(jTextFieldCod.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            while(cod.length()!=6)
            {
                cod="0"+cod;
            }
            jTextFieldCod.setText(cod);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "El código tiene que tener como mucho 6 números/letras.", cod, WIDTH);
            throw new Exception("");
        }
    }
}

